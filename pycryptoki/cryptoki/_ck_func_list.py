"""
CK_ function list. Unlikely to be used by external users -- these exist mostly for
the GetFunctionList call.
"""
from ctypes import c_int
from pycryptoki.cryptoki.ck_defs import *


class CK_SFNT_CA_FUNCTION_LIST(Structure):
    pass


CK_SFNT_CA_FUNCTION_LIST_PTR = POINTER(CK_SFNT_CA_FUNCTION_LIST)
CK_SFNT_CA_FUNCTION_LIST_PTR_PTR = POINTER(CK_SFNT_CA_FUNCTION_LIST_PTR)
CK_CA_GetFunctionList = CFUNCTYPE(CK_RV, CK_SFNT_CA_FUNCTION_LIST_PTR_PTR)

CK_CA_WaitForSlotEvent = CFUNCTYPE(CK_RV, CK_FLAGS, POINTER(CK_ULONG), CK_SLOT_ID_PTR, CK_VOID_PTR)

CK_CA_InitIndirectToken = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_CHAR_PTR, CK_ULONG, CK_CHAR_PTR, CK_SESSION_HANDLE
)
CK_CA_InitIndirectPIN = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_CHAR_PTR, CK_ULONG, CK_SESSION_HANDLE
)
CK_CA_ResetPIN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_CHAR_PTR, CK_ULONG)

CK_CA_InitRolePIN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_USER_TYPE, CK_CHAR_PTR, CK_ULONG)
CK_CA_InitSlotRolePIN = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, CK_USER_TYPE, CK_CHAR_PTR, CK_ULONG
)
CK_CA_RoleStateGet = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_USER_TYPE, POINTER(CA_ROLE_STATE))
CK_CA_CreateLoginChallenge = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_USER_TYPE, CK_ULONG, CK_CHAR_PTR, CK_ULONG_PTR, CK_CHAR_PTR
)
CK_CA_CreateContainerLoginChallenge = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_SLOT_ID,
    CK_USER_TYPE,
    CK_ULONG,
    CK_CHAR_PTR,
    CK_ULONG_PTR,
    CK_CHAR_PTR,
)
CK_CA_Deactivate = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_USER_TYPE)
CK_CA_FindAdminSlotForSlot = CFUNCTYPE(CK_RV, CK_SLOT_ID, POINTER(CK_SLOT_ID), POINTER(CK_SLOT_ID))
CK_CA_TokenInsert = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CT_TokenHndle, CK_SLOT_ID)
CK_CA_TokenInsertNoAuth = CFUNCTYPE(CK_RV, CT_TokenHndle, CK_SLOT_ID)
CK_CA_TokenZeroize = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, CK_FLAGS)
CK_CA_TokenDelete = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID)
CK_NOTIFICATION = CK_ULONG
CK_NOTIFY = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_NOTIFICATION, CK_VOID_PTR)
CK_CA_OpenSession = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_FLAGS, CK_VOID_PTR, CK_NOTIFY, CK_SESSION_HANDLE_PTR
)
CK_CA_OpenSessionWithAppID = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_FLAGS, CK_ULONG, CK_ULONG, CK_VOID_PTR, CK_NOTIFY, CK_SESSION_HANDLE_PTR
)
CK_CA_IndirectLogin = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_USER_TYPE, CK_SESSION_HANDLE)
CK_CA_InitializeRemotePEDVector = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_DeleteRemotePEDVector = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_GetRemotePEDVectorStatus = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_ConfigureRemotePED = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_CHAR_PTR, CK_ULONG, CK_ULONG_PTR)
CK_CA_DismantleRemotePED = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG)
CK_CA_Restart = CFUNCTYPE(CK_RV, CK_SLOT_ID)
CK_CA_RestartForContainer = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG)
CK_CA_CloseApplicationID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG)
CK_CA_CloseApplicationIDForContainer = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG)
CK_CA_OpenApplicationID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG)
CK_CA_OpenApplicationIDForContainer = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG)
CK_CA_SetApplicationID = CFUNCTYPE(CK_RV, CK_ULONG, CK_ULONG)
# utilization_metrics
CK_CA_DescribeUtilizationBinId = CFUNCTYPE(CK_RV, CK_ULONG, CK_CHAR_PTR)
CK_CA_ReadUtilizationMetrics = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_ReadAndResetUtilizationMetrics = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_ReadAllUtilizationCounters = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_UTILIZATION_COUNTER_PTR, CK_ULONG_PTR
)
# pka
CK_CA_SetAuthorizationData = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_UTF8CHAR_PTR, CK_ULONG, CK_UTF8CHAR_PTR, CK_ULONG
)
CK_CA_ResetAuthorizationData = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_UTF8CHAR_PTR, CK_ULONG
)
CK_CA_AuthorizeKey = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_UTF8CHAR_PTR, CK_ULONG
)
CK_CA_AssignKey = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE)
CK_CA_IncrementFailedAuthCount = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE)
CK_CA_SessionCancel = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_FLAGS)
CK_CA_ManualKCV = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_SetLKCV = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_CA_SetKCV = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_CA_SetRDK = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, POINTER(CK_BYTE), CK_ULONG)
CK_CA_SetCloningDomain = CFUNCTYPE(CK_RV, CK_BYTE_PTR, CK_ULONG)
CK_OBJECT_HANDLE_PTR = POINTER(CK_OBJECT_HANDLE)
CK_CA_ClonePrivateKey = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_OBJECT_HANDLE_PTR
)
CK_CA_CloneObject = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_SESSION_HANDLE, CK_ULONG, CK_OBJECT_HANDLE, CK_OBJECT_HANDLE_PTR
)
CK_CA_GenerateCloningKEV = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_CloneAsTargetInit = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BBOOL,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
)
CK_CA_CloneAsSource = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BBOOL,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
)
CK_CA_CloneAsTarget = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_BBOOL,
    CK_OBJECT_HANDLE_PTR,
)
CK_CA_SetMofN = CFUNCTYPE(CK_RV, CK_BBOOL)
CK_CA_GenerateMofN = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CA_MOFN_GENERATION_PTR, CK_ULONG, CK_ULONG, CK_VOID_PTR
)
CK_CA_GenerateCloneableMofN = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CA_MOFN_GENERATION_PTR, CK_ULONG, CK_ULONG, CK_VOID_PTR
)
CK_CA_ModifyMofN = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CA_MOFN_GENERATION_PTR, CK_ULONG, CK_ULONG, CK_VOID_PTR
)
CK_CA_CloneMofN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SESSION_HANDLE, CK_VOID_PTR)
CK_CA_CloneModifyMofN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SESSION_HANDLE, CK_VOID_PTR)
CK_CA_ActivateMofN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CA_MOFN_ACTIVATION_PTR, CK_ULONG)
CK_CA_DeactivateMofN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_GetMofNStatus = CFUNCTYPE(CK_RV, CK_SLOT_ID, CA_MOFN_STATUS_PTR)
CK_CA_DuplicateMofN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_IsMofNEnabled = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_IsMofNRequired = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)

CK_CA_GenerateTokenKeys = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ATTRIBUTE_PTR, CK_ULONG)
CK_CA_GetTokenCertificateInfo = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_SetTokenCertificateSignature = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG, CK_ATTRIBUTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG
)
CK_CA_GetModuleList = CFUNCTYPE(CK_RV, CK_SLOT_ID, CKCA_MODULE_ID_PTR, CK_ULONG, CK_ULONG_PTR)
CK_CA_GetModuleInfo = CFUNCTYPE(CK_RV, CK_SLOT_ID, CKCA_MODULE_ID, CKCA_MODULE_INFO_PTR)
CK_CA_LoadModule = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CKCA_MODULE_ID_PTR,
)
CK_CA_LoadEncryptedModule = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_OBJECT_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CKCA_MODULE_ID_PTR,
)
CK_CA_UnloadModule = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CKCA_MODULE_ID)
CK_CA_PerformModuleCall = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CKCA_MODULE_ID,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_ULONG_PTR,
)
CK_CA_FirmwareUpdate = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
)
CK_CA_FirmwareRollback = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_CapabilityUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR
)
CK_CA_GetUserContainerNumber = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetUserContainerName = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_SetUserContainerName = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_BYTE_PTR, CK_ULONG)
CK_CA_GetTokenInsertionCount = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetRollbackFirmwareVersion = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetFPV = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetTPV = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetExtendedTPV = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR)
CK_CA_GetConfigurationElementDescription = CFUNCTYPE(
    CK_RV,
    CK_SLOT_ID,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_CHAR_PTR,
)
CK_CA_GetHSMCapabilitySet = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetHSMCapabilitySetting = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR)
CK_CA_GetHSMPolicySet = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetHSMPolicySetting = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR)
CK_CA_GetContainerCapabilitySet = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetContainerCapabilitySetting = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG_PTR)
CK_CA_GetContainerPolicySet = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetContainerPolicySetting = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG_PTR)
CK_CA_SetTPV = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_SetExtendedTPV = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_SetHSMPolicy = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_SetHSMPolicies = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR)
CK_CA_SetDestructiveHSMPolicy = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_SetDestructiveHSMPolicies = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_SetContainerPolicy = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG, CK_ULONG)
CK_CA_SetContainerPolicies = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetTokenCapabilities = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_SetTokenPolicies = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetTokenPolicies = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_RetrieveLicenseList = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR)
CK_CA_QueryLicense = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_BYTE_PTR
)
CK_CA_GetContainerStatus = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetTokenStatus = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR)
CK_CA_GetSessionInfo = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetCVFirmwareVersion = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR)
CK_CA_ReadCommonStore = CFUNCTYPE(CK_RV, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_WriteCommonStore = CFUNCTYPE(CK_RV, CK_ULONG, CK_BYTE_PTR, CK_ULONG)
CK_CA_GetPrimarySlot = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID_PTR)
CK_CA_GetSecondarySlot = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID_PTR)
CK_CA_SwitchSecondarySlot = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, CK_ULONG)
CK_CA_CloseSecondarySession = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, CK_ULONG)
CK_CA_CloseAllSecondarySessions = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_ChoosePrimarySlot = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_ChooseSecondarySlot = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_CloneObjectToAllSessions = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE)
CK_CA_CloneAllObjectsToSession = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID)
CK_CA_ResetDevice = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_FLAGS)
CK_CA_Zeroize = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_FLAGS)
CK_CA_FactoryReset = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_FLAGS)
CK_CA_SetPedId = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG)
CK_CA_GetPedId = CFUNCTYPE(CK_RV, CK_SLOT_ID, POINTER(CK_ULONG))
CK_CA_SpRawRead = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_SpRawWrite = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_CheckOperationState = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, POINTER(CK_BBOOL))
CK_CA_DestroyMultipleObjects = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_OBJECT_HANDLE_PTR, CK_ULONG_PTR
)
CK_CA_OpenSecureToken = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_ULONG,
    CK_CHAR_PTR,
)
CK_CA_CloseSecureToken = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_ListSecureTokenInit = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR, CK_BYTE_PTR
)
CK_CA_ListSecureTokenUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG, CK_BYTE_PTR, CK_ULONG
)

CK_CA_GetSecureElementMeta = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CK_MECHANISM_PTR,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_BYTE_PTR,
    CK_ULONG,
)
CK_CA_HAInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE)
CK_CA_HAInitExtended = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_OBJECT_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_ULONG,
)
CK_CA_HAGetMasterPublic = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_HAGetLoginChallenge = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_USER_TYPE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_HAAnswerLoginChallenge = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_HALogin = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_HAAnswerMofNChallenge = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_HAActivateMofN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_CA_GetHAState = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_HA_STATE_PTR)
CK_CA_GetTokenCertificates = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_ExtractMaskedObject = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_InsertMaskedObject = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG_PTR, CK_BYTE_PTR, CK_ULONG)
CK_CA_MultisignValue = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_MECHANISM_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
)
CK_CA_SIMExtract = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CK_OBJECT_HANDLE_PTR,
    CK_ULONG,
    CK_ULONG,
    CKA_SIM_AUTH_FORM,
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
    CK_BBOOL,
    CK_ULONG_PTR,
    CK_BYTE_PTR,
)
CK_CA_SIMInsert = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CKA_SIM_AUTH_FORM,
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
    CK_OBJECT_HANDLE_PTR,
)
CK_CA_SIMMultiSign = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_MECHANISM_PTR,
    CK_ULONG,
    CKA_SIM_AUTH_FORM,
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
    CK_ULONG_PTR,
    POINTER(CK_BYTE_PTR),
)
CK_CA_Extract = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR)
CK_CA_Insert = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR)
CK_CA_GetTokenObjectUID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, POINTER(CK_BYTE))
CK_CA_GetTokenObjectHandle = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, POINTER(CK_BYTE), CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetObjectUID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG, POINTER(CK_BYTE))
CK_CA_GetObjectHandle = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, POINTER(CK_BYTE), CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_DeleteContainer = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_MTKSetStorage = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_MTKRestore = CFUNCTYPE(CK_RV, CK_SLOT_ID)
CK_CA_MTKResplit = CFUNCTYPE(CK_RV, CK_SLOT_ID)
CK_CA_MTKZeroize = CFUNCTYPE(CK_RV, CK_SLOT_ID)
CK_CA_MTKGetState = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_STMToggle = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_STMGetState = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetTSV = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_InvokeServiceInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_InvokeService = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_ULONG_PTR)
CK_CA_InvokeServiceFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_InvokeServiceAsynch = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_BYTE_PTR, CK_ULONG)
CK_CA_InvokeServiceSinglePart = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_EncodeECPrimeParams = CFUNCTYPE(
    CK_RV,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
)
CK_CA_EncodeECChar2Params = CFUNCTYPE(
    CK_RV,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_BYTE_PTR,
    CK_ULONG,
)
CK_CA_EncodeECParamsFromFile = CFUNCTYPE(CK_RV, CK_BYTE_PTR, CK_ULONG_PTR, CK_BYTE_PTR)
CK_CA_GetHSMStats = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG_PTR, POINTER(HSM_STATS_PARAMS))
CK_CA_GetHSMStorageInformation = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetTokenStorageInformation = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetContainerStorageInformation = CFUNCTYPE(
    CK_RV,
    CK_SLOT_ID,
    CK_ULONG,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    CK_ULONG_PTR,
)
CK_CA_SetContainerSize = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_CreateContainer = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_ULONG,
    CK_CHAR_PTR,
    CK_ULONG,
    CK_CHAR_PTR,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG,
    CK_ULONG_PTR,
)
CK_CA_InitAudit = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_CHAR_PTR, CK_ULONG, CK_CHAR_PTR)
CK_CA_LogVerify = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_ULONG, CK_ULONG_PTR)
CK_CA_LogVerifyFile = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_CHAR_PTR, CK_ULONG_PTR)
CK_CA_LogExternal = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_SESSION_HANDLE, POINTER(CK_CHAR), CK_ULONG)
CK_CA_LogImportSecret = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_CA_LogExportSecret = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_TimeSync = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_GetTime = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG_PTR)
CK_CA_LogSetConfig = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG, CK_ULONG, CK_ULONG, CK_BYTE_PTR
)
CK_CA_LogGetConfig = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
    CK_BYTE_PTR,
)
CK_CA_ReplaceFastPathKEK = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_CA_LogGetStatus = CFUNCTYPE(
    CK_RV,
    CK_SLOT_ID,
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
    POINTER(CK_ULONG),
)
CK_CA_DeleteContainerWithHandle = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_GetContainerList = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_ULONG, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_GetContainerName = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_CA_GetNumberOfAllowedContainers = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetTunnelSlotNumber = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_SLOT_ID_PTR)
CK_CA_GetClusterState = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_CLUSTER_STATE_PTR)
CK_CA_LockClusteredSlot = CFUNCTYPE(CK_RV, CK_SLOT_ID)
CK_CA_UnlockClusteredSlot = CFUNCTYPE(CK_RV, CK_SLOT_ID)
CK_CA_LKMInitiatorChallenge = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_OBJECT_HANDLE,
    CK_OBJECT_HANDLE,
    CK_ULONG,
    CK_LKM_TOKEN_ID_PTR,
    CK_LKM_TOKEN_ID_PTR,
    CK_CHAR_PTR,
    CK_ULONG_PTR,
)
CK_CA_LKMReceiverResponse = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_OBJECT_HANDLE,
    CK_OBJECT_HANDLE,
    CK_ULONG,
    CK_LKM_TOKEN_ID_PTR,
    CK_CHAR_PTR,
    CK_ULONG,
    CK_CHAR_PTR,
    CK_ULONG_PTR,
)
CK_CA_LKMInitiatorComplete = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_CHAR_PTR,
    CK_ULONG,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_CHAR_PTR,
    CK_ULONG_PTR,
    CK_OBJECT_HANDLE_PTR,
    CK_OBJECT_HANDLE_PTR,
)
CK_CA_LKMReceiverComplete = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_CHAR_PTR,
    CK_ULONG,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_OBJECT_HANDLE_PTR,
    CK_OBJECT_HANDLE_PTR,
)
CK_CA_ModifyUsageCount = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_EnableUnauthTokenInsertion = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR)
CK_CA_GetUnauthTokenInsertionStatus = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, POINTER(CK_ULONG), POINTER(CK_ULONG)
)
CK_CA_DisableUnauthTokenInsertion = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG)
CK_CA_STCRegister = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_SLOT_ID,
    POINTER(CK_CHAR),
    CK_ULONG,
    POINTER(CK_CHAR),
    CK_ULONG,
    POINTER(CK_CHAR),
    CK_ULONG,
)
CK_CA_STCDeregister = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, POINTER(CK_CHAR))
CK_CA_STCGetPubKey = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_SLOT_ID,
    POINTER(CK_CHAR),
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
)
CK_CA_STCGetClientsList = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR
)
CK_CA_STCGetClientInfo = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_SLOT_ID,
    CK_ULONG,
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
    CK_ULONG_PTR,
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
)
CK_CA_STCGetPartPubKey = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_SLOT_ID,
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
    POINTER(CK_CHAR),
    CK_ULONG_PTR,
)
CK_CA_STCGetAdminPubKey = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, POINTER(CK_CHAR), CK_ULONG_PTR, POINTER(CK_CHAR), CK_ULONG_PTR
)
CK_CA_STCSetCipherAlgorithm = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCGetCipherAlgorithm = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_STCClearCipherAlgorithm = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCSetDigestAlgorithm = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCGetDigestAlgorithm = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_STCClearDigestAlgorithm = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCSetKeyLifeTime = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCGetKeyLifeTime = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR)
CK_CA_STCSetKeyActivationTimeOut = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCGetKeyActivationTimeOut = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR)
CK_CA_STCSetMaxSessions = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCGetMaxSessions = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR)
CK_CA_STCSetSequenceWindowSize = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG)
CK_CA_STCGetSequenceWindowSize = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR)
CK_CA_STCIsEnabled = CFUNCTYPE(CK_RV, CK_ULONG, CK_BYTE_PTR)
CK_CA_STCGetState = CFUNCTYPE(CK_RV, CK_ULONG, POINTER(CK_CHAR), CK_BYTE)
CK_CA_STCGetCurrentKeyLife = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ULONG, CK_ULONG_PTR)
CK_CA_GetSlotIdForPhysicalSlot = CFUNCTYPE(CK_RV, CK_ULONG, CK_SLOT_ID_PTR)
CK_CA_GetSlotIdForContainer = CFUNCTYPE(CK_RV, CK_ULONG, CK_ULONG, CK_SLOT_ID_PTR)
CK_CA_STCGetChannelID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_STCGetCipherID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_STCGetDigestID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_STCGetCipherIDs = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_BYTE_PTR)
CK_CA_STCGetCipherNameByID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_CHAR_PTR, CK_BYTE)
CK_CA_STCGetDigestIDs = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_BYTE_PTR)
CK_CA_STCGetDigestNameByID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG, CK_CHAR_PTR, CK_BYTE)
CK_CA_GetServerInstanceBySlotID = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR)
CK_CA_GetSlotListFromServerInstance = CFUNCTYPE(CK_RV, CK_ULONG, CK_SLOT_ID_PTR, CK_ULONG_PTR)
CK_CA_PerformSelfTest = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_ULONG, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_CA_GetFirmwareVersion = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_ULONG_PTR, CK_ULONG_PTR, CK_ULONG_PTR)


CK_GetTotalOperations = CFUNCTYPE(CK_RV, CK_SLOT_ID, POINTER(c_int))
CK_ResetTotalOperations = CFUNCTYPE(CK_RV, CK_SLOT_ID)


CK_C_Initialize = CFUNCTYPE(CK_RV, CK_VOID_PTR)
CK_C_Finalize = CFUNCTYPE(CK_RV, CK_VOID_PTR)

CK_C_GetInfo = CFUNCTYPE(CK_RV, CK_INFO_PTR)
CK_FUNCTION_LIST_PTR = POINTER(CK_FUNCTION_LIST)
CK_FUNCTION_LIST_PTR_PTR = POINTER(CK_FUNCTION_LIST_PTR)
CK_C_GetFunctionList = CFUNCTYPE(CK_RV, CK_FUNCTION_LIST_PTR_PTR)
CK_C_GetSlotList = CFUNCTYPE(CK_RV, CK_BBOOL, CK_SLOT_ID_PTR, CK_ULONG_PTR)

CK_C_GetSlotInfo = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_SLOT_INFO_PTR)
CK_C_GetTokenInfo = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_TOKEN_INFO_PTR)
CK_C_GetMechanismList = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_MECHANISM_TYPE_PTR, CK_ULONG_PTR)

CK_C_GetMechanismInfo = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_MECHANISM_TYPE, CK_MECHANISM_INFO_PTR)
CK_C_InitToken = CFUNCTYPE(CK_RV, CK_SLOT_ID, CK_UTF8CHAR_PTR, CK_ULONG, CK_UTF8CHAR_PTR)
CK_C_InitPIN = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_UTF8CHAR_PTR, CK_ULONG)
CK_C_SetPIN = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_UTF8CHAR_PTR, CK_ULONG, CK_UTF8CHAR_PTR, CK_ULONG
)
CK_C_OpenSession = CFUNCTYPE(
    CK_RV, CK_SLOT_ID, CK_FLAGS, CK_VOID_PTR, CK_NOTIFY, CK_SESSION_HANDLE_PTR
)
CK_C_CloseSession = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_C_CloseAllSessions = CFUNCTYPE(CK_RV, CK_SLOT_ID)

CK_C_GetSessionInfo = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_SESSION_INFO_PTR)
CK_C_GetOperationState = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_SetOperationState = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_OBJECT_HANDLE, CK_OBJECT_HANDLE
)
CK_C_Login = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_USER_TYPE, CK_UTF8CHAR_PTR, CK_ULONG)
CK_C_Logout = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_C_CreateObject = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_ATTRIBUTE_PTR, CK_ULONG, CK_OBJECT_HANDLE_PTR
)
CK_C_CopyObject = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_ATTRIBUTE_PTR, CK_ULONG, CK_OBJECT_HANDLE_PTR
)
CK_C_DestroyObject = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE)
CK_C_GetObjectSize = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_ULONG_PTR)
CK_C_GetAttributeValue = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_ATTRIBUTE_PTR, CK_ULONG
)
CK_C_SetAttributeValue = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE, CK_ATTRIBUTE_PTR, CK_ULONG
)
CK_C_FindObjectsInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_ATTRIBUTE_PTR, CK_ULONG)
CK_C_FindObjects = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE_PTR, CK_ULONG, CK_ULONG_PTR)
CK_C_FindObjectsFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_C_EncryptInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_OBJECT_HANDLE)
CK_C_Encrypt = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_EncryptUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_EncryptFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_DecryptInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_OBJECT_HANDLE)
CK_C_Decrypt = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_DecryptUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_DecryptFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_DigestInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR)
CK_C_Digest = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_DigestUpdate = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_C_DigestKey = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_OBJECT_HANDLE)
CK_C_DigestFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_SignInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_OBJECT_HANDLE)
CK_C_Sign = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_SignUpdate = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_C_SignFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG_PTR)
CK_C_SignRecoverInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_OBJECT_HANDLE)
CK_C_SignRecover = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_VerifyInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_OBJECT_HANDLE)
CK_C_Verify = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG)
CK_C_VerifyUpdate = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_C_VerifyFinal = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_C_VerifyRecoverInit = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_OBJECT_HANDLE)
CK_C_VerifyRecover = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_DigestEncryptUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_DecryptDigestUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_SignEncryptUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_DecryptVerifyUpdate = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG, CK_BYTE_PTR, CK_ULONG_PTR
)
CK_C_GenerateKey = CFUNCTYPE(
    CK_RV, CK_SESSION_HANDLE, CK_MECHANISM_PTR, CK_ATTRIBUTE_PTR, CK_ULONG, CK_OBJECT_HANDLE_PTR
)
CK_C_GenerateKeyPair = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_MECHANISM_PTR,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_OBJECT_HANDLE_PTR,
    CK_OBJECT_HANDLE_PTR,
)
CK_C_WrapKey = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_MECHANISM_PTR,
    CK_OBJECT_HANDLE,
    CK_OBJECT_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG_PTR,
)
CK_C_UnwrapKey = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_MECHANISM_PTR,
    CK_OBJECT_HANDLE,
    CK_BYTE_PTR,
    CK_ULONG,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_OBJECT_HANDLE_PTR,
)
CK_C_DeriveKey = CFUNCTYPE(
    CK_RV,
    CK_SESSION_HANDLE,
    CK_MECHANISM_PTR,
    CK_OBJECT_HANDLE,
    CK_ATTRIBUTE_PTR,
    CK_ULONG,
    CK_OBJECT_HANDLE_PTR,
)
CK_C_SeedRandom = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_C_GenerateRandom = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE, CK_BYTE_PTR, CK_ULONG)
CK_C_GetFunctionStatus = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_C_CancelFunction = CFUNCTYPE(CK_RV, CK_SESSION_HANDLE)
CK_C_WaitForSlotEvent = CFUNCTYPE(CK_RV, CK_FLAGS, CK_SLOT_ID_PTR, CK_VOID_PTR)

struct_def(
    CK_SFNT_CA_FUNCTION_LIST,
    [
        ("version", CK_VERSION),
        ("CA_GetFunctionList", CK_CA_GetFunctionList),
        ("CA_WaitForSlotEvent", CK_CA_WaitForSlotEvent),
        ("CA_InitIndirectToken", CK_CA_InitIndirectToken),
        ("CA_InitIndirectPIN", CK_CA_InitIndirectPIN),
        ("CA_ResetPIN", CK_CA_ResetPIN),
        ("CA_InitRolePIN", CK_CA_InitRolePIN),
        ("CA_InitSlotRolePIN", CK_CA_InitSlotRolePIN),
        ("CA_RoleStateGet", CK_CA_RoleStateGet),
        ("CA_CreateLoginChallenge", CK_CA_CreateLoginChallenge),
        ("CA_CreateContainerLoginChallenge", CK_CA_CreateContainerLoginChallenge),
        ("CA_Deactivate", CK_CA_Deactivate),
        ("CA_FindAdminSlotForSlot", CK_CA_FindAdminSlotForSlot),
        ("CA_TokenInsert", CK_CA_TokenInsert),
        ("CA_TokenInsertNoAuth", CK_CA_TokenInsertNoAuth),
        ("CA_TokenZeroize", CK_CA_TokenZeroize),
        ("CA_TokenDelete", CK_CA_TokenDelete),
        ("CA_OpenSession", CK_CA_OpenSession),
        ("CA_OpenSessionWithAppID", CK_CA_OpenSessionWithAppID),
        ("CA_IndirectLogin", CK_CA_IndirectLogin),
        ("CA_InitializeRemotePEDVector", CK_CA_InitializeRemotePEDVector),
        ("CA_DeleteRemotePEDVector", CK_CA_DeleteRemotePEDVector),
        ("CA_GetRemotePEDVectorStatus", CK_CA_GetRemotePEDVectorStatus),
        ("CA_ConfigureRemotePED", CK_CA_ConfigureRemotePED),
        ("CA_DismantleRemotePED", CK_CA_DismantleRemotePED),
        ("CA_Restart", CK_CA_Restart),
        ("CA_RestartForContainer", CK_CA_RestartForContainer),
        ("CA_CloseApplicationID", CK_CA_CloseApplicationID),
        ("CA_CloseApplicationIDForContainer", CK_CA_CloseApplicationIDForContainer),
        ("CA_OpenApplicationID", CK_CA_OpenApplicationID),
        ("CA_OpenApplicationIDForContainer", CK_CA_OpenApplicationIDForContainer),
        ("CA_SetApplicationID", CK_CA_SetApplicationID),
        ("CA_ReadUtilizationMetrics", CK_CA_ReadUtilizationMetrics),
        ("CA_DescribeUtilizationBinId", CK_CA_DescribeUtilizationBinId),
        ("CA_ReadAndResetUtilizationMetrics", CK_CA_ReadAndResetUtilizationMetrics),
        ("CA_ReadAllUtilizationCounters", CK_CA_ReadAllUtilizationCounters),
        ("CA_SetAuthorizationData", CK_CA_SetAuthorizationData),
        ("CA_AuthorizeKey", CK_CA_AuthorizeKey),
        ("CA_ManualKCV", CK_CA_ManualKCV),
        ("CA_SetLKCV", CK_CA_SetLKCV),
        ("CA_SetKCV", CK_CA_SetKCV),
        ("CA_SetRDK", CK_CA_SetRDK),
        ("CA_SetCloningDomain", CK_CA_SetCloningDomain),
        ("CA_ClonePrivateKey", CK_CA_ClonePrivateKey),
        ("CA_CloneObject", CK_CA_CloneObject),
        ("CA_GenerateCloningKEV", CK_CA_GenerateCloningKEV),
        ("CA_CloneAsTargetInit", CK_CA_CloneAsTargetInit),
        ("CA_CloneAsSource", CK_CA_CloneAsSource),
        ("CA_CloneAsTarget", CK_CA_CloneAsTarget),
        ("CA_SetMofN", CK_CA_SetMofN),
        ("CA_GenerateMofN", CK_CA_GenerateMofN),
        ("CA_GenerateCloneableMofN", CK_CA_GenerateCloneableMofN),
        ("CA_ModifyMofN", CK_CA_ModifyMofN),
        ("CA_CloneMofN", CK_CA_CloneMofN),
        ("CA_CloneModifyMofN", CK_CA_CloneModifyMofN),
        ("CA_ActivateMofN", CK_CA_ActivateMofN),
        ("CA_DeactivateMofN", CK_CA_DeactivateMofN),
        ("CA_GetMofNStatus", CK_CA_GetMofNStatus),
        ("CA_DuplicateMofN", CK_CA_DuplicateMofN),
        ("CA_IsMofNEnabled", CK_CA_IsMofNEnabled),
        ("CA_IsMofNRequired", CK_CA_IsMofNRequired),
        ("CA_GenerateTokenKeys", CK_CA_GenerateTokenKeys),
        ("CA_GetTokenCertificateInfo", CK_CA_GetTokenCertificateInfo),
        ("CA_SetTokenCertificateSignature", CK_CA_SetTokenCertificateSignature),
        ("CA_GetModuleList", CK_CA_GetModuleList),
        ("CA_GetModuleInfo", CK_CA_GetModuleInfo),
        ("CA_LoadModule", CK_CA_LoadModule),
        ("CA_LoadEncryptedModule", CK_CA_LoadEncryptedModule),
        ("CA_UnloadModule", CK_CA_UnloadModule),
        ("CA_PerformModuleCall", CK_CA_PerformModuleCall),
        ("CA_FirmwareUpdate", CK_CA_FirmwareUpdate),
        ("CA_FirmwareRollback", CK_CA_FirmwareRollback),
        ("CA_CapabilityUpdate", CK_CA_CapabilityUpdate),
        ("CA_GetUserContainerNumber", CK_CA_GetUserContainerNumber),
        ("CA_GetUserContainerName", CK_CA_GetUserContainerName),
        ("CA_SetUserContainerName", CK_CA_SetUserContainerName),
        ("CA_GetTokenInsertionCount", CK_CA_GetTokenInsertionCount),
        ("CA_GetRollbackFirmwareVersion", CK_CA_GetRollbackFirmwareVersion),
        ("CA_GetFPV", CK_CA_GetFPV),
        ("CA_GetTPV", CK_CA_GetTPV),
        ("CA_GetExtendedTPV", CK_CA_GetExtendedTPV),
        ("CA_GetConfigurationElementDescription", CK_CA_GetConfigurationElementDescription),
        ("CA_GetHSMCapabilitySet", CK_CA_GetHSMCapabilitySet),
        ("CA_GetHSMCapabilitySetting", CK_CA_GetHSMCapabilitySetting),
        ("CA_GetHSMPolicySet", CK_CA_GetHSMPolicySet),
        ("CA_GetHSMPolicySetting", CK_CA_GetHSMPolicySetting),
        ("CA_GetContainerCapabilitySet", CK_CA_GetContainerCapabilitySet),
        ("CA_GetContainerCapabilitySetting", CK_CA_GetContainerCapabilitySetting),
        ("CA_GetContainerPolicySet", CK_CA_GetContainerPolicySet),
        ("CA_GetContainerPolicySetting", CK_CA_GetContainerPolicySetting),
        ("CA_SetTPV", CK_CA_SetTPV),
        ("CA_SetExtendedTPV", CK_CA_SetExtendedTPV),
        ("CA_SetHSMPolicy", CK_CA_SetHSMPolicy),
        ("CA_SetHSMPolicies", CK_CA_SetHSMPolicies),
        ("CA_SetDestructiveHSMPolicy", CK_CA_SetDestructiveHSMPolicy),
        ("CA_SetDestructiveHSMPolicies", CK_CA_SetDestructiveHSMPolicies),
        ("CA_SetContainerPolicy", CK_CA_SetContainerPolicy),
        ("CA_SetContainerPolicies", CK_CA_SetContainerPolicies),
        ("CA_GetTokenCapabilities", CK_CA_GetTokenCapabilities),
        ("CA_SetTokenPolicies", CK_CA_SetTokenPolicies),
        ("CA_GetTokenPolicies", CK_CA_GetTokenPolicies),
        ("CA_RetrieveLicenseList", CK_CA_RetrieveLicenseList),
        ("CA_QueryLicense", CK_CA_QueryLicense),
        ("CA_GetContainerStatus", CK_CA_GetContainerStatus),
        ("CA_GetTokenStatus", CK_CA_GetTokenStatus),
        ("CA_GetSessionInfo", CK_CA_GetSessionInfo),
        ("CA_GetCVFirmwareVersion", CK_CA_GetCVFirmwareVersion),
        ("CA_ReadCommonStore", CK_CA_ReadCommonStore),
        ("CA_WriteCommonStore", CK_CA_WriteCommonStore),
        ("CA_GetPrimarySlot", CK_CA_GetPrimarySlot),
        ("CA_GetSecondarySlot", CK_CA_GetSecondarySlot),
        ("CA_SwitchSecondarySlot", CK_CA_SwitchSecondarySlot),
        ("CA_CloseSecondarySession", CK_CA_CloseSecondarySession),
        ("CA_CloseAllSecondarySessions", CK_CA_CloseAllSecondarySessions),
        ("CA_ChoosePrimarySlot", CK_CA_ChoosePrimarySlot),
        ("CA_ChooseSecondarySlot", CK_CA_ChooseSecondarySlot),
        ("CA_CloneObjectToAllSessions", CK_CA_CloneObjectToAllSessions),
        ("CA_CloneAllObjectsToSession", CK_CA_CloneAllObjectsToSession),
        ("CA_ResetDevice", CK_CA_ResetDevice),
        ("CA_Zeroize", CK_CA_Zeroize),
        ("CA_FactoryReset", CK_CA_FactoryReset),
        ("CA_SetPedId", CK_CA_SetPedId),
        ("CA_GetPedId", CK_CA_GetPedId),
        ("CA_SpRawRead", CK_CA_SpRawRead),
        ("CA_SpRawWrite", CK_CA_SpRawWrite),
        ("CA_CheckOperationState", CK_CA_CheckOperationState),
        ("CA_DestroyMultipleObjects", CK_CA_DestroyMultipleObjects),
        ("CA_OpenSecureToken", CK_CA_OpenSecureToken),
        ("CA_CloseSecureToken", CK_CA_CloseSecureToken),
        ("CA_ListSecureTokenInit", CK_CA_ListSecureTokenInit),
        ("CA_ListSecureTokenUpdate", CK_CA_ListSecureTokenUpdate),
        ("CA_GetSecureElementMeta", CK_CA_GetSecureElementMeta),
        ("CA_HAInit", CK_CA_HAInit),
        ("CA_HAInitExtended", CK_CA_HAInitExtended),
        ("CA_HAGetMasterPublic", CK_CA_HAGetMasterPublic),
        ("CA_HAGetLoginChallenge", CK_CA_HAGetLoginChallenge),
        ("CA_HAAnswerLoginChallenge", CK_CA_HAAnswerLoginChallenge),
        ("CA_HALogin", CK_CA_HALogin),
        ("CA_HAAnswerMofNChallenge", CK_CA_HAAnswerMofNChallenge),
        ("CA_HAActivateMofN", CK_CA_HAActivateMofN),
        ("CA_GetHAState", CK_CA_GetHAState),
        ("CA_GetTokenCertificates", CK_CA_GetTokenCertificates),
        ("CA_ExtractMaskedObject", CK_CA_ExtractMaskedObject),
        ("CA_InsertMaskedObject", CK_CA_InsertMaskedObject),
        ("CA_MultisignValue", CK_CA_MultisignValue),
        ("CA_SIMExtract", CK_CA_SIMExtract),
        ("CA_SIMInsert", CK_CA_SIMInsert),
        ("CA_SIMMultiSign", CK_CA_SIMMultiSign),
        ("CA_Extract", CK_CA_Extract),
        ("CA_Insert", CK_CA_Insert),
        ("CA_GetTokenObjectUID", CK_CA_GetTokenObjectUID),
        ("CA_GetTokenObjectHandle", CK_CA_GetTokenObjectHandle),
        ("CA_GetObjectUID", CK_CA_GetObjectUID),
        ("CA_GetObjectHandle", CK_CA_GetObjectHandle),
        ("CA_DeleteContainer", CK_CA_DeleteContainer),
        ("CA_MTKSetStorage", CK_CA_MTKSetStorage),
        ("CA_MTKRestore", CK_CA_MTKRestore),
        ("CA_MTKResplit", CK_CA_MTKResplit),
        ("CA_MTKZeroize", CK_CA_MTKZeroize),
        ("CA_MTKGetState", CK_CA_MTKGetState),
        ("CA_STMToggle", CK_CA_STMToggle),
        ("CA_STMGetState", CK_CA_STMGetState),
        ("CA_GetTSV", CK_CA_GetTSV),
        ("CA_InvokeServiceInit", CK_CA_InvokeServiceInit),
        ("CA_InvokeService", CK_CA_InvokeService),
        ("CA_InvokeServiceFinal", CK_CA_InvokeServiceFinal),
        ("CA_InvokeServiceAsynch", CK_CA_InvokeServiceAsynch),
        ("CA_InvokeServiceSinglePart", CK_CA_InvokeServiceSinglePart),
        ("CA_EncodeECPrimeParams", CK_CA_EncodeECPrimeParams),
        ("CA_EncodeECChar2Params", CK_CA_EncodeECChar2Params),
        ("CA_EncodeECParamsFromFile", CK_CA_EncodeECParamsFromFile),
        ("CA_GetHSMStats", CK_CA_GetHSMStats),
        ("CA_GetHSMStorageInformation", CK_CA_GetHSMStorageInformation),
        ("CA_GetTokenStorageInformation", CK_CA_GetTokenStorageInformation),
        ("CA_GetContainerStorageInformation", CK_CA_GetContainerStorageInformation),
        ("CA_SetContainerSize", CK_CA_SetContainerSize),
        ("CA_CreateContainer", CK_CA_CreateContainer),
        ("CA_InitAudit", CK_CA_InitAudit),
        ("CA_LogVerify", CK_CA_LogVerify),
        ("CA_LogVerifyFile", CK_CA_LogVerifyFile),
        ("CA_LogExternal", CK_CA_LogExternal),
        ("CA_LogImportSecret", CK_CA_LogImportSecret),
        ("CA_LogExportSecret", CK_CA_LogExportSecret),
        ("CA_TimeSync", CK_CA_TimeSync),
        ("CA_GetTime", CK_CA_GetTime),
        ("CA_LogSetConfig", CK_CA_LogSetConfig),
        ("CA_LogGetConfig", CK_CA_LogGetConfig),
        ("CA_ReplaceFastPathKEK", CK_CA_ReplaceFastPathKEK),
        ("CA_LogGetStatus", CK_CA_LogGetStatus),
        ("CA_DeleteContainerWithHandle", CK_CA_DeleteContainerWithHandle),
        ("CA_GetContainerList", CK_CA_GetContainerList),
        ("CA_GetContainerName", CK_CA_GetContainerName),
        ("CA_GetNumberOfAllowedContainers", CK_CA_GetNumberOfAllowedContainers),
        ("CA_GetTunnelSlotNumber", CK_CA_GetTunnelSlotNumber),
        ("CA_GetClusterState", CK_CA_GetClusterState),
        ("CA_LockClusteredSlot", CK_CA_LockClusteredSlot),
        ("CA_UnlockClusteredSlot", CK_CA_UnlockClusteredSlot),
        ("CA_LKMInitiatorChallenge", CK_CA_LKMInitiatorChallenge),
        ("CA_LKMReceiverResponse", CK_CA_LKMReceiverResponse),
        ("CA_LKMInitiatorComplete", CK_CA_LKMInitiatorComplete),
        ("CA_LKMReceiverComplete", CK_CA_LKMReceiverComplete),
        ("CA_ModifyUsageCount", CK_CA_ModifyUsageCount),
        ("CA_EnableUnauthTokenInsertion", CK_CA_EnableUnauthTokenInsertion),
        ("CA_GetUnauthTokenInsertionStatus", CK_CA_GetUnauthTokenInsertionStatus),
        ("CA_DisableUnauthTokenInsertion", CK_CA_DisableUnauthTokenInsertion),
        ("CA_STCRegister", CK_CA_STCRegister),
        ("CA_STCDeregister", CK_CA_STCDeregister),
        ("CA_STCGetPubKey", CK_CA_STCGetPubKey),
        ("CA_STCGetClientsList", CK_CA_STCGetClientsList),
        ("CA_STCGetClientInfo", CK_CA_STCGetClientInfo),
        ("CA_STCGetPartPubKey", CK_CA_STCGetPartPubKey),
        ("CA_STCGetAdminPubKey", CK_CA_STCGetAdminPubKey),
        ("CA_STCSetCipherAlgorithm", CK_CA_STCSetCipherAlgorithm),
        ("CA_STCGetCipherAlgorithm", CK_CA_STCGetCipherAlgorithm),
        ("CA_STCClearCipherAlgorithm", CK_CA_STCClearCipherAlgorithm),
        ("CA_STCSetDigestAlgorithm", CK_CA_STCSetDigestAlgorithm),
        ("CA_STCGetDigestAlgorithm", CK_CA_STCGetDigestAlgorithm),
        ("CA_STCClearDigestAlgorithm", CK_CA_STCClearDigestAlgorithm),
        ("CA_STCSetKeyLifeTime", CK_CA_STCSetKeyLifeTime),
        ("CA_STCGetKeyLifeTime", CK_CA_STCGetKeyLifeTime),
        ("CA_STCSetKeyActivationTimeOut", CK_CA_STCSetKeyActivationTimeOut),
        ("CA_STCGetKeyActivationTimeOut", CK_CA_STCGetKeyActivationTimeOut),
        ("CA_STCSetMaxSessions", CK_CA_STCSetMaxSessions),
        ("CA_STCGetMaxSessions", CK_CA_STCGetMaxSessions),
        ("CA_STCSetSequenceWindowSize", CK_CA_STCSetSequenceWindowSize),
        ("CA_STCGetSequenceWindowSize", CK_CA_STCGetSequenceWindowSize),
        ("CA_STCIsEnabled", CK_CA_STCIsEnabled),
        ("CA_STCGetState", CK_CA_STCGetState),
        ("CA_STCGetCurrentKeyLife", CK_CA_STCGetCurrentKeyLife),
        ("CA_GetSlotIdForPhysicalSlot", CK_CA_GetSlotIdForPhysicalSlot),
        ("CA_GetSlotIdForContainer", CK_CA_GetSlotIdForContainer),
        ("CA_STCGetChannelID", CK_CA_STCGetChannelID),
        ("CA_STCGetCipherID", CK_CA_STCGetCipherID),
        ("CA_STCGetDigestID", CK_CA_STCGetDigestID),
        ("CA_STCGetCipherIDs", CK_CA_STCGetCipherIDs),
        ("CA_STCGetCipherNameByID", CK_CA_STCGetCipherNameByID),
        ("CA_STCGetDigestIDs", CK_CA_STCGetDigestIDs),
        ("CA_STCGetDigestNameByID", CK_CA_STCGetDigestNameByID),
        ("CA_GetServerInstanceBySlotID", CK_CA_GetServerInstanceBySlotID),
        ("CA_GetSlotListFromServerInstance", CK_CA_GetSlotListFromServerInstance),
        ("CA_PerformSelfTest", CK_CA_PerformSelfTest),
        ("CA_GetFirmwareVersion", CK_CA_GetFirmwareVersion),
    ],
)
struct_def(
    CK_FUNCTION_LIST,
    [
        ("version", CK_VERSION),
        ("C_Initialize", CK_C_Initialize),
        ("C_Finalize", CK_C_Finalize),
        ("C_GetInfo", CK_C_GetInfo),
        ("C_GetFunctionList", CK_C_GetFunctionList),
        ("C_GetSlotList", CK_C_GetSlotList),
        ("C_GetSlotInfo", CK_C_GetSlotInfo),
        ("C_GetTokenInfo", CK_C_GetTokenInfo),
        ("C_GetMechanismList", CK_C_GetMechanismList),
        ("C_GetMechanismInfo", CK_C_GetMechanismInfo),
        ("C_InitToken", CK_C_InitToken),
        ("C_InitPIN", CK_C_InitPIN),
        ("C_SetPIN", CK_C_SetPIN),
        ("C_OpenSession", CK_C_OpenSession),
        ("C_CloseSession", CK_C_CloseSession),
        ("C_CloseAllSessions", CK_C_CloseAllSessions),
        ("C_GetSessionInfo", CK_C_GetSessionInfo),
        ("C_GetOperationState", CK_C_GetOperationState),
        ("C_SetOperationState", CK_C_SetOperationState),
        ("C_Login", CK_C_Login),
        ("C_Logout", CK_C_Logout),
        ("C_CreateObject", CK_C_CreateObject),
        ("C_CopyObject", CK_C_CopyObject),
        ("C_DestroyObject", CK_C_DestroyObject),
        ("C_GetObjectSize", CK_C_GetObjectSize),
        ("C_GetAttributeValue", CK_C_GetAttributeValue),
        ("C_SetAttributeValue", CK_C_SetAttributeValue),
        ("C_FindObjectsInit", CK_C_FindObjectsInit),
        ("C_FindObjects", CK_C_FindObjects),
        ("C_FindObjectsFinal", CK_C_FindObjectsFinal),
        ("C_EncryptInit", CK_C_EncryptInit),
        ("C_Encrypt", CK_C_Encrypt),
        ("C_EncryptUpdate", CK_C_EncryptUpdate),
        ("C_EncryptFinal", CK_C_EncryptFinal),
        ("C_DecryptInit", CK_C_DecryptInit),
        ("C_Decrypt", CK_C_Decrypt),
        ("C_DecryptUpdate", CK_C_DecryptUpdate),
        ("C_DecryptFinal", CK_C_DecryptFinal),
        ("C_DigestInit", CK_C_DigestInit),
        ("C_Digest", CK_C_Digest),
        ("C_DigestUpdate", CK_C_DigestUpdate),
        ("C_DigestKey", CK_C_DigestKey),
        ("C_DigestFinal", CK_C_DigestFinal),
        ("C_SignInit", CK_C_SignInit),
        ("C_Sign", CK_C_Sign),
        ("C_SignUpdate", CK_C_SignUpdate),
        ("C_SignFinal", CK_C_SignFinal),
        ("C_SignRecoverInit", CK_C_SignRecoverInit),
        ("C_SignRecover", CK_C_SignRecover),
        ("C_VerifyInit", CK_C_VerifyInit),
        ("C_Verify", CK_C_Verify),
        ("C_VerifyUpdate", CK_C_VerifyUpdate),
        ("C_VerifyFinal", CK_C_VerifyFinal),
        ("C_VerifyRecoverInit", CK_C_VerifyRecoverInit),
        ("C_VerifyRecover", CK_C_VerifyRecover),
        ("C_DigestEncryptUpdate", CK_C_DigestEncryptUpdate),
        ("C_DecryptDigestUpdate", CK_C_DecryptDigestUpdate),
        ("C_SignEncryptUpdate", CK_C_SignEncryptUpdate),
        ("C_DecryptVerifyUpdate", CK_C_DecryptVerifyUpdate),
        ("C_GenerateKey", CK_C_GenerateKey),
        ("C_GenerateKeyPair", CK_C_GenerateKeyPair),
        ("C_WrapKey", CK_C_WrapKey),
        ("C_UnwrapKey", CK_C_UnwrapKey),
        ("C_DeriveKey", CK_C_DeriveKey),
        ("C_SeedRandom", CK_C_SeedRandom),
        ("C_GenerateRandom", CK_C_GenerateRandom),
        ("C_GetFunctionStatus", CK_C_GetFunctionStatus),
        ("C_CancelFunction", CK_C_CancelFunction),
        ("C_WaitForSlotEvent", CK_C_WaitForSlotEvent),
    ],
)
